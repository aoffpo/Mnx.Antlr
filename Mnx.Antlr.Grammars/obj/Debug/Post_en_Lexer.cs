//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Steve\git\Mnx.Antlr\Mnx.Antlr.Grammars\Grammars\Post.en\Post_en_Lexer.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Mnx.Antlr.Grammars.Post.en {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class Post_en_Lexer : Lexer {
	public const int
		YESTERDAY=1, TODAY=2, TOMORROW=3, TONIGHT=4, MORNING=5, AFTERNOON=6, EVENING=7, 
		DAY=8, SUNDAY=9, MONDAY=10, TUESDAY=11, WEDNESDAY=12, THURSDAY=13, FRIDAY=14, 
		SATURDAY=15, DIGIT=16, WS=17;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"YESTERDAY", "TODAY", "TOMORROW", "TONIGHT", "MORNING", "AFTERNOON", "EVENING", 
		"DAY", "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", 
		"SATURDAY", "DIGIT", "WS", "A", "B", "C", "D", "E", "F", "G", "H", "I", 
		"J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", 
		"X", "Y", "Z"
	};


	public Post_en_Lexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "' '"
	};
	private static readonly string[] _SymbolicNames = {
		null, "YESTERDAY", "TODAY", "TOMORROW", "TONIGHT", "MORNING", "AFTERNOON", 
		"EVENING", "DAY", "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", 
		"FRIDAY", "SATURDAY", "DIGIT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Post_en_Lexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x13\x105\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x5\x5\x81\n\x5\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3"+
		"\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12"+
		"\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B"+
		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3"+
		"!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)"+
		"\x3*\x3*\x3+\x3+\x3,\x3,\x2\x2\x2-\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v"+
		"\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B"+
		"\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x2\'\x2\x2)\x2\x2+\x2"+
		"\x2-\x2\x2/\x2\x2\x31\x2\x2\x33\x2\x2\x35\x2\x2\x37\x2\x2\x39\x2\x2;\x2"+
		"\x2=\x2\x2?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\x2G\x2\x2I\x2\x2K\x2\x2M"+
		"\x2\x2O\x2\x2Q\x2\x2S\x2\x2U\x2\x2W\x2\x2\x3\x2\x1D\x3\x2\x32;\x4\x2\x43"+
		"\x43\x63\x63\x4\x2\x44\x44\x64\x64\x4\x2\x45\x45\x65\x65\x4\x2\x46\x46"+
		"\x66\x66\x4\x2GGgg\x4\x2HHhh\x4\x2IIii\x4\x2JJjj\x4\x2KKkk\x4\x2LLll\x4"+
		"\x2MMmm\x4\x2NNnn\x4\x2OOoo\x4\x2PPpp\x4\x2QQqq\x4\x2RRrr\x4\x2SSss\x4"+
		"\x2TTtt\x4\x2UUuu\x4\x2VVvv\x4\x2WWww\x4\x2XXxx\x4\x2YYyy\x4\x2ZZzz\x4"+
		"\x2[[{{\x4\x2\\\\||\xEB\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2"+
		"\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2"+
		"\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17"+
		"\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2"+
		"\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x3Y\x3\x2\x2\x2\x5"+
		"\x63\x3\x2\x2\x2\ai\x3\x2\x2\x2\t\x80\x3\x2\x2\x2\v\x82\x3\x2\x2\x2\r"+
		"\x8A\x3\x2\x2\x2\xF\x94\x3\x2\x2\x2\x11\x9C\x3\x2\x2\x2\x13\xA0\x3\x2"+
		"\x2\x2\x15\xA5\x3\x2\x2\x2\x17\xAA\x3\x2\x2\x2\x19\xB0\x3\x2\x2\x2\x1B"+
		"\xB8\x3\x2\x2\x2\x1D\xBF\x3\x2\x2\x2\x1F\xC4\x3\x2\x2\x2!\xCB\x3\x2\x2"+
		"\x2#\xCD\x3\x2\x2\x2%\xD1\x3\x2\x2\x2\'\xD3\x3\x2\x2\x2)\xD5\x3\x2\x2"+
		"\x2+\xD7\x3\x2\x2\x2-\xD9\x3\x2\x2\x2/\xDB\x3\x2\x2\x2\x31\xDD\x3\x2\x2"+
		"\x2\x33\xDF\x3\x2\x2\x2\x35\xE1\x3\x2\x2\x2\x37\xE3\x3\x2\x2\x2\x39\xE5"+
		"\x3\x2\x2\x2;\xE7\x3\x2\x2\x2=\xE9\x3\x2\x2\x2?\xEB\x3\x2\x2\x2\x41\xED"+
		"\x3\x2\x2\x2\x43\xEF\x3\x2\x2\x2\x45\xF1\x3\x2\x2\x2G\xF3\x3\x2\x2\x2"+
		"I\xF5\x3\x2\x2\x2K\xF7\x3\x2\x2\x2M\xF9\x3\x2\x2\x2O\xFB\x3\x2\x2\x2Q"+
		"\xFD\x3\x2\x2\x2S\xFF\x3\x2\x2\x2U\x101\x3\x2\x2\x2W\x103\x3\x2\x2\x2"+
		"YZ\x5U+\x2Z[\x5-\x17\x2[\\\x5I%\x2\\]\x5K&\x2]^\x5-\x17\x2^_\x5G$\x2_"+
		"`\x5+\x16\x2`\x61\x5%\x13\x2\x61\x62\x5U+\x2\x62\x4\x3\x2\x2\x2\x63\x64"+
		"\x5K&\x2\x64\x65\x5\x41!\x2\x65\x66\x5+\x16\x2\x66g\x5%\x13\x2gh\x5U+"+
		"\x2h\x6\x3\x2\x2\x2ij\x5K&\x2jk\x5\x41!\x2kl\x5=\x1F\x2lm\x5\x41!\x2m"+
		"n\x5G$\x2no\x5G$\x2op\x5\x41!\x2pq\x5Q)\x2q\b\x3\x2\x2\x2rs\x5K&\x2st"+
		"\x5\x41!\x2tu\x5? \x2uv\x5\x35\x1B\x2vw\x5\x31\x19\x2wx\x5\x33\x1A\x2"+
		"xy\x5K&\x2y\x81\x3\x2\x2\x2z{\x5? \x2{|\x5\x35\x1B\x2|}\x5\x31\x19\x2"+
		"}~\x5\x33\x1A\x2~\x7F\x5K&\x2\x7F\x81\x3\x2\x2\x2\x80r\x3\x2\x2\x2\x80"+
		"z\x3\x2\x2\x2\x81\n\x3\x2\x2\x2\x82\x83\x5=\x1F\x2\x83\x84\x5\x41!\x2"+
		"\x84\x85\x5G$\x2\x85\x86\x5? \x2\x86\x87\x5\x35\x1B\x2\x87\x88\x5? \x2"+
		"\x88\x89\x5\x31\x19\x2\x89\f\x3\x2\x2\x2\x8A\x8B\x5%\x13\x2\x8B\x8C\x5"+
		"/\x18\x2\x8C\x8D\x5K&\x2\x8D\x8E\x5-\x17\x2\x8E\x8F\x5G$\x2\x8F\x90\x5"+
		"? \x2\x90\x91\x5\x41!\x2\x91\x92\x5\x41!\x2\x92\x93\x5? \x2\x93\xE\x3"+
		"\x2\x2\x2\x94\x95\x5-\x17\x2\x95\x96\x5O(\x2\x96\x97\x5-\x17\x2\x97\x98"+
		"\x5? \x2\x98\x99\x5\x35\x1B\x2\x99\x9A\x5? \x2\x9A\x9B\x5\x31\x19\x2\x9B"+
		"\x10\x3\x2\x2\x2\x9C\x9D\x5+\x16\x2\x9D\x9E\x5%\x13\x2\x9E\x9F\x5U+\x2"+
		"\x9F\x12\x3\x2\x2\x2\xA0\xA1\x5I%\x2\xA1\xA2\x5M\'\x2\xA2\xA3\x5? \x2"+
		"\xA3\xA4\x5\x11\t\x2\xA4\x14\x3\x2\x2\x2\xA5\xA6\x5=\x1F\x2\xA6\xA7\x5"+
		"\x41!\x2\xA7\xA8\x5? \x2\xA8\xA9\x5\x11\t\x2\xA9\x16\x3\x2\x2\x2\xAA\xAB"+
		"\x5K&\x2\xAB\xAC\x5M\'\x2\xAC\xAD\x5-\x17\x2\xAD\xAE\x5I%\x2\xAE\xAF\x5"+
		"\x11\t\x2\xAF\x18\x3\x2\x2\x2\xB0\xB1\x5Q)\x2\xB1\xB2\x5-\x17\x2\xB2\xB3"+
		"\x5+\x16\x2\xB3\xB4\x5? \x2\xB4\xB5\x5-\x17\x2\xB5\xB6\x5I%\x2\xB6\xB7"+
		"\x5\x11\t\x2\xB7\x1A\x3\x2\x2\x2\xB8\xB9\x5K&\x2\xB9\xBA\x5\x33\x1A\x2"+
		"\xBA\xBB\x5M\'\x2\xBB\xBC\x5G$\x2\xBC\xBD\x5I%\x2\xBD\xBE\x5\x11\t\x2"+
		"\xBE\x1C\x3\x2\x2\x2\xBF\xC0\x5/\x18\x2\xC0\xC1\x5G$\x2\xC1\xC2\x5\x35"+
		"\x1B\x2\xC2\xC3\x5\x11\t\x2\xC3\x1E\x3\x2\x2\x2\xC4\xC5\x5I%\x2\xC5\xC6"+
		"\x5%\x13\x2\xC6\xC7\x5K&\x2\xC7\xC8\x5M\'\x2\xC8\xC9\x5G$\x2\xC9\xCA\x5"+
		"\x11\t\x2\xCA \x3\x2\x2\x2\xCB\xCC\t\x2\x2\x2\xCC\"\x3\x2\x2\x2\xCD\xCE"+
		"\a\"\x2\x2\xCE\xCF\x3\x2\x2\x2\xCF\xD0\b\x12\x2\x2\xD0$\x3\x2\x2\x2\xD1"+
		"\xD2\t\x3\x2\x2\xD2&\x3\x2\x2\x2\xD3\xD4\t\x4\x2\x2\xD4(\x3\x2\x2\x2\xD5"+
		"\xD6\t\x5\x2\x2\xD6*\x3\x2\x2\x2\xD7\xD8\t\x6\x2\x2\xD8,\x3\x2\x2\x2\xD9"+
		"\xDA\t\a\x2\x2\xDA.\x3\x2\x2\x2\xDB\xDC\t\b\x2\x2\xDC\x30\x3\x2\x2\x2"+
		"\xDD\xDE\t\t\x2\x2\xDE\x32\x3\x2\x2\x2\xDF\xE0\t\n\x2\x2\xE0\x34\x3\x2"+
		"\x2\x2\xE1\xE2\t\v\x2\x2\xE2\x36\x3\x2\x2\x2\xE3\xE4\t\f\x2\x2\xE4\x38"+
		"\x3\x2\x2\x2\xE5\xE6\t\r\x2\x2\xE6:\x3\x2\x2\x2\xE7\xE8\t\xE\x2\x2\xE8"+
		"<\x3\x2\x2\x2\xE9\xEA\t\xF\x2\x2\xEA>\x3\x2\x2\x2\xEB\xEC\t\x10\x2\x2"+
		"\xEC@\x3\x2\x2\x2\xED\xEE\t\x11\x2\x2\xEE\x42\x3\x2\x2\x2\xEF\xF0\t\x12"+
		"\x2\x2\xF0\x44\x3\x2\x2\x2\xF1\xF2\t\x13\x2\x2\xF2\x46\x3\x2\x2\x2\xF3"+
		"\xF4\t\x14\x2\x2\xF4H\x3\x2\x2\x2\xF5\xF6\t\x15\x2\x2\xF6J\x3\x2\x2\x2"+
		"\xF7\xF8\t\x16\x2\x2\xF8L\x3\x2\x2\x2\xF9\xFA\t\x17\x2\x2\xFAN\x3\x2\x2"+
		"\x2\xFB\xFC\t\x18\x2\x2\xFCP\x3\x2\x2\x2\xFD\xFE\t\x19\x2\x2\xFER\x3\x2"+
		"\x2\x2\xFF\x100\t\x1A\x2\x2\x100T\x3\x2\x2\x2\x101\x102\t\x1B\x2\x2\x102"+
		"V\x3\x2\x2\x2\x103\x104\t\x1C\x2\x2\x104X\x3\x2\x2\x2\x4\x2\x80\x3\x2"+
		"\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Mnx.Antlr.Grammars.Post.en
