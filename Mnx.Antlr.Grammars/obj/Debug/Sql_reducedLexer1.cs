//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Steve\git\Mnx.Antlr\Mnx.Antlr.Grammars\Grammars\MSSql2008\Sql_reducedLexer1.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Mnx.Antlr.Grammars.Grammars.MSSql2008 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class Sql_reducedLexer1 : Lexer {
	public const int
		WS=1, Single_Line_Comment=2, Multiline_Comment=3, All_Valid=4, ALPHANUMERIC=5, 
		Control_Codes=6, DIGIT=7, LETTER=8, IDENTIFIER=9, Any_Ch=10, String_Ch=11, 
		Id_Ch_Standard=12, Id_Ch_Delimited_Bracket=13, Id_Ch_Delimited_Bracket_Start=14, 
		Id_Ch_Delimited_Quote=15, Id_Ch_Delimited_Quote_Start=16, Hex_Ch=17, Nonspace_Ch=18, 
		ACTION=19, SELECT=20, FROM=21, WHERE=22, FOR=23, WITH=24, CHECK=25, OPTION=26, 
		UPDATE=27;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "Single_Line_Comment", "Multiline_Comment", "All_Valid", "ALPHANUMERIC", 
		"Control_Codes", "DIGIT", "LETTER", "IDENTIFIER", "Any_Ch", "String_Ch", 
		"Id_Ch_Standard", "Id_Ch_Delimited_Bracket", "Id_Ch_Delimited_Bracket_Start", 
		"Id_Ch_Delimited_Quote", "Id_Ch_Delimited_Quote_Start", "Hex_Ch", "Nonspace_Ch", 
		"ACTION", "SELECT", "FROM", "WHERE", "FOR", "WITH", "CHECK", "OPTION", 
		"UPDATE"
	};


	public Sql_reducedLexer1(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "' '", null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "'ACTION'", "'select'", "'from'", 
		"'where'", "'for'", "'with'", "'check'", "'option'", "'update'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "Single_Line_Comment", "Multiline_Comment", "All_Valid", "ALPHANUMERIC", 
		"Control_Codes", "DIGIT", "LETTER", "IDENTIFIER", "Any_Ch", "String_Ch", 
		"Id_Ch_Standard", "Id_Ch_Delimited_Bracket", "Id_Ch_Delimited_Bracket_Start", 
		"Id_Ch_Delimited_Quote", "Id_Ch_Delimited_Quote_Start", "Hex_Ch", "Nonspace_Ch", 
		"ACTION", "SELECT", "FROM", "WHERE", "FOR", "WITH", "CHECK", "OPTION", 
		"UPDATE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Sql_reducedLexer1.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1D\xC1\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\a\x3\x42\n\x3\f\x3\xE\x3\x45\v\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\a\x4M\n\x4\f\x4\xE\x4P\v\x4\x3\x4\x3\x4\x3\x4\x5\x4U\n\x4\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x6\x3\x6\x5\x6]\n\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t"+
		"\x3\n\x6\n\x66\n\n\r\n\xE\ng\x3\v\x3\v\x3\v\x3\f\x6\fn\n\f\r\f\xE\fo\x3"+
		"\f\x3\f\x3\r\x6\ru\n\r\r\r\xE\rv\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3"+
		"\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3N\x2\x2\x1D\x3\x2\x3\x5\x2"+
		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x1D\x3\x2\v\x4\x2\f\f\xF\xF\x4\x2\x32^zz\x3\x2\x32;\x4\x2"+
		"\x43\\\x63|\x3\x2\x61\x61\x6\x2\"\"))..]_\x3\x2%%\x3\x2$%\x4\x2\x32;\x43"+
		"H\xC7\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2"+
		"\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2"+
		"\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19"+
		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2"+
		"\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)"+
		"\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x3"+
		"\x39\x3\x2\x2\x2\x5=\x3\x2\x2\x2\aH\x3\x2\x2\x2\tX\x3\x2\x2\x2\v\\\x3"+
		"\x2\x2\x2\r^\x3\x2\x2\x2\xF`\x3\x2\x2\x2\x11\x62\x3\x2\x2\x2\x13\x65\x3"+
		"\x2\x2\x2\x15i\x3\x2\x2\x2\x17m\x3\x2\x2\x2\x19t\x3\x2\x2\x2\x1Bz\x3\x2"+
		"\x2\x2\x1D}\x3\x2\x2\x2\x1F\x80\x3\x2\x2\x2!\x83\x3\x2\x2\x2#\x86\x3\x2"+
		"\x2\x2%\x88\x3\x2\x2\x2\'\x8B\x3\x2\x2\x2)\x92\x3\x2\x2\x2+\x99\x3\x2"+
		"\x2\x2-\x9E\x3\x2\x2\x2/\xA4\x3\x2\x2\x2\x31\xA8\x3\x2\x2\x2\x33\xAD\x3"+
		"\x2\x2\x2\x35\xB3\x3\x2\x2\x2\x37\xBA\x3\x2\x2\x2\x39:\a\"\x2\x2:;\x3"+
		"\x2\x2\x2;<\b\x2\x2\x2<\x4\x3\x2\x2\x2=>\a/\x2\x2>?\a/\x2\x2?\x43\x3\x2"+
		"\x2\x2@\x42\n\x2\x2\x2\x41@\x3\x2\x2\x2\x42\x45\x3\x2\x2\x2\x43\x41\x3"+
		"\x2\x2\x2\x43\x44\x3\x2\x2\x2\x44\x46\x3\x2\x2\x2\x45\x43\x3\x2\x2\x2"+
		"\x46G\b\x3\x2\x2G\x6\x3\x2\x2\x2HI\a\x31\x2\x2IJ\a,\x2\x2JN\x3\x2\x2\x2"+
		"KM\v\x2\x2\x2LK\x3\x2\x2\x2MP\x3\x2\x2\x2NO\x3\x2\x2\x2NL\x3\x2\x2\x2"+
		"OT\x3\x2\x2\x2PN\x3\x2\x2\x2QR\a,\x2\x2RU\a\x31\x2\x2SU\a\x2\x2\x3TQ\x3"+
		"\x2\x2\x2TS\x3\x2\x2\x2UV\x3\x2\x2\x2VW\b\x4\x2\x2W\b\x3\x2\x2\x2XY\t"+
		"\x3\x2\x2Y\n\x3\x2\x2\x2Z]\x5\x11\t\x2[]\x5\xF\b\x2\\Z\x3\x2\x2\x2\\["+
		"\x3\x2\x2\x2]\f\x3\x2\x2\x2^_\t\x3\x2\x2_\xE\x3\x2\x2\x2`\x61\t\x4\x2"+
		"\x2\x61\x10\x3\x2\x2\x2\x62\x63\t\x5\x2\x2\x63\x12\x3\x2\x2\x2\x64\x66"+
		"\x5\v\x6\x2\x65\x64\x3\x2\x2\x2\x66g\x3\x2\x2\x2g\x65\x3\x2\x2\x2gh\x3"+
		"\x2\x2\x2h\x14\x3\x2\x2\x2ij\x5\t\x5\x2jk\x5\r\a\x2k\x16\x3\x2\x2\x2l"+
		"n\x5\x15\v\x2ml\x3\x2\x2\x2no\x3\x2\x2\x2om\x3\x2\x2\x2op\x3\x2\x2\x2"+
		"pq\x3\x2\x2\x2qr\x5\x3\x2\x2r\x18\x3\x2\x2\x2su\x5\v\x6\x2ts\x3\x2\x2"+
		"\x2uv\x3\x2\x2\x2vt\x3\x2\x2\x2vw\x3\x2\x2\x2wx\x3\x2\x2\x2xy\t\x6\x2"+
		"\x2y\x1A\x3\x2\x2\x2z{\x5\x15\v\x2{|\t\a\x2\x2|\x1C\x3\x2\x2\x2}~\x5\x1B"+
		"\xE\x2~\x7F\t\b\x2\x2\x7F\x1E\x3\x2\x2\x2\x80\x81\x5\x15\v\x2\x81\x82"+
		"\t\t\x2\x2\x82 \x3\x2\x2\x2\x83\x84\x5\x1F\x10\x2\x84\x85\t\t\x2\x2\x85"+
		"\"\x3\x2\x2\x2\x86\x87\t\n\x2\x2\x87$\x3\x2\x2\x2\x88\x89\x5\x15\v\x2"+
		"\x89\x8A\x5\x3\x2\x2\x8A&\x3\x2\x2\x2\x8B\x8C\a\x43\x2\x2\x8C\x8D\a\x45"+
		"\x2\x2\x8D\x8E\aV\x2\x2\x8E\x8F\aK\x2\x2\x8F\x90\aQ\x2\x2\x90\x91\aP\x2"+
		"\x2\x91(\x3\x2\x2\x2\x92\x93\au\x2\x2\x93\x94\ag\x2\x2\x94\x95\an\x2\x2"+
		"\x95\x96\ag\x2\x2\x96\x97\a\x65\x2\x2\x97\x98\av\x2\x2\x98*\x3\x2\x2\x2"+
		"\x99\x9A\ah\x2\x2\x9A\x9B\at\x2\x2\x9B\x9C\aq\x2\x2\x9C\x9D\ao\x2\x2\x9D"+
		",\x3\x2\x2\x2\x9E\x9F\ay\x2\x2\x9F\xA0\aj\x2\x2\xA0\xA1\ag\x2\x2\xA1\xA2"+
		"\at\x2\x2\xA2\xA3\ag\x2\x2\xA3.\x3\x2\x2\x2\xA4\xA5\ah\x2\x2\xA5\xA6\a"+
		"q\x2\x2\xA6\xA7\at\x2\x2\xA7\x30\x3\x2\x2\x2\xA8\xA9\ay\x2\x2\xA9\xAA"+
		"\ak\x2\x2\xAA\xAB\av\x2\x2\xAB\xAC\aj\x2\x2\xAC\x32\x3\x2\x2\x2\xAD\xAE"+
		"\a\x65\x2\x2\xAE\xAF\aj\x2\x2\xAF\xB0\ag\x2\x2\xB0\xB1\a\x65\x2\x2\xB1"+
		"\xB2\am\x2\x2\xB2\x34\x3\x2\x2\x2\xB3\xB4\aq\x2\x2\xB4\xB5\ar\x2\x2\xB5"+
		"\xB6\av\x2\x2\xB6\xB7\ak\x2\x2\xB7\xB8\aq\x2\x2\xB8\xB9\ap\x2\x2\xB9\x36"+
		"\x3\x2\x2\x2\xBA\xBB\aw\x2\x2\xBB\xBC\ar\x2\x2\xBC\xBD\a\x66\x2\x2\xBD"+
		"\xBE\a\x63\x2\x2\xBE\xBF\av\x2\x2\xBF\xC0\ag\x2\x2\xC0\x38\x3\x2\x2\x2"+
		"\n\x2\x43NT\\gov\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Mnx.Antlr.Grammars.Grammars.MSSql2008
